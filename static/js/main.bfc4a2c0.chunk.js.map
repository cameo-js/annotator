{"version":3,"sources":["Annotator/utils.ts","Annotator/color.ts","Annotator/Menu.tsx","Annotator/Pannel.tsx","Annotator/index.tsx","Row.tsx","App.jsx","serviceWorker.js","index.jsx"],"names":["selectionIsEmpty","selection","anchorNode","compareDocumentPosition","focusNode","focusOffset","anchorOffset","selectionIsBackwards","position","backward","Node","DOCUMENT_POSITION_PRECEDING","hashCode","str","hash","i","length","charCodeAt","stringToHex","concat","num","c","toString","toUpperCase","substring","numberToHex","stringToRGBA","rgb","numberToRGB","Menu","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputText","adding","handleClick","e","rootRef","current","contains","target","console","log","close","handleSubmit","key","toLowerCase","updateTags","toConsumableArray","tags","setState","handleChange","value","handleAddTag","React","createRef","inherits","createClass","_this2","setTimeout","document","addEventListener","removeEventListener","_this$props","handleMenuItemClick","left","top","react_default","a","createElement","index_es","style","display","zIndex","map","tag","index","onClick","event","width","defaultValue","margin","onChange","onKeyPress","Component","Wrapper","styled","div","_templateObject","Pannel","_ref","entities","onStyle","onDelete","react","entity","text","IconButton_default","padding","aria-label","start","end","Delete_default","fontSize","Phrase","Annotator_templateObject","StyledGridListTile","withStyles","root","borderLeft","tile","overflow","GridListTile","Split","mark","border","backgroundColor","data-start","data-end","content","Annotator","open","handleDelete","splitIndex","findIndex","s","updateEntities","slice","handleMouseUp","window","getSelection","temp","menuRef","offsetTop","offsetLeft","offsetParent","getRangeAt","getBoundingClientRect","height","parseInt","parentElement","getAttribute","data","phrase","list","empty","splits","offsets","lastEnd","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","sortBy","o","Symbol","iterator","next","done","offset","push","objectSpread","err","return","splitWithOffsets","Menu_Menu","RootRef_default","GridList_default","cellHeight","cols","GridListTile_default","ref","split","Annotator_Split","assign","Pannel_Pannel","Row","ExpansionPanel_default","ExpansionPanelSummary_default","Typography_default","ExpansionPanelDetails_default","Annotator_Annotator","KEY","App","multiline","save","localStorage","setItem","JSON","stringify","load","parse","getItem","loadTags","b","flat","reduce","acc","includes","onLoadFromInput","d","parsePhrase","reduceRight","className","Button_default","variant","color","TextField_default","id","label","rowsMax","fullWidth","Row_Row","prevState","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfc4a2c0.chunk.js","sourcesContent":["import sortBy from 'lodash/sortBy';\n\nexport const splitWithOffsets = (text: string, offsets: {start: number; end: number}[]) => {\n  let lastEnd = 0\n  const splits = []\n\n  for (let offset of sortBy(offsets, o => o.start)) {\n    const {start, end} = offset\n    if (lastEnd < start) {\n      splits.push({\n        start: lastEnd,\n        end: start,\n        content: text.slice(lastEnd, start),\n      })\n    }\n    splits.push({\n      ...offset,\n      mark: true,\n      content: text.slice(start, end),\n    })\n    lastEnd = end\n  }\n  if (lastEnd < text.length) {\n    splits.push({\n      start: lastEnd,\n      end: text.length,\n      content: text.slice(lastEnd, text.length),\n    })\n  }\n\n  return splits\n}\n\nexport const selectionIsEmpty = (selection: Selection) => {\n  let position = selection.anchorNode.compareDocumentPosition(selection.focusNode)\n\n  return position === 0 && selection.focusOffset === selection.anchorOffset\n}\n\nexport const selectionIsBackwards = (selection: Selection) => {\n  if (selectionIsEmpty(selection)) return false\n\n  let position = selection.anchorNode.compareDocumentPosition(selection.focusNode)\n\n  let backward = false\n  if (\n    (!position && selection.anchorOffset > selection.focusOffset) ||\n    position === Node.DOCUMENT_POSITION_PRECEDING\n  )\n    backward = true\n\n  return backward\n}\n","const hashCode = (str: string) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n     hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n} \n\nconst numberToHex = (num: number) => {\n  const c = (num & 0x00FFFFFF)\n      .toString(16)\n      .toUpperCase();\n\n  return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nconst numberToRGB = (num: number) => {\n  const c = (num & 0x00FFFFFF)\n\n  return [c >> 16 & 0xFF, c >> 8 & 0xFF, c & 0xFF];\n}\n\nexport const stringToHex = (str: string) => `#${numberToHex((hashCode(str)))}`\n\nexport const stringToRGBA = (str: string) => {\n  const rgb = numberToRGB((hashCode(str)))\n  return `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 0.2)`\n}\n","import React from 'react'\nimport { Paper, MenuList, MenuItem, TextField, RootRef } from '@material-ui/core';\n\ninterface MenuProps {\n  left: number;\n  top: number;\n  tags: string[];\n  handleMenuItemClick: (tag: string, index: number) => void;\n  close: () => void;\n  updateTags: (tags: string[]) => void;\n}\n\ninterface MenuStates {\n  inputText: any\n  adding: boolean;\n}\n\nexport class Menu extends React.Component<MenuProps, MenuStates> {\n  rootRef: any;\n  constructor(props: MenuProps) {\n    super(props)\n\n    this.rootRef = (React as any).createRef();\n  }\n  public state: MenuStates = {\n    inputText: '',\n    adding: false,\n  }\n  public componentDidMount() {\n    setTimeout(() => {\n      document.addEventListener('click', this.handleClick);\n    }, 500)\n  }\n  public componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n  }\n  public render() {\n    const {handleMenuItemClick, left, top, tags} = this.props\n    return (\n      <RootRef rootRef={this.rootRef} >\n        <Paper\n          style={{\n            left: `${left}px`, \n            top: `${top + 10}px`,\n            display: 'inline-block',\n            position:'absolute',\n            zIndex: 10\n          }}\n        >\n          <MenuList>\n            {tags.map((tag, index) => <MenuItem key={index} onClick={event => handleMenuItemClick(tag, index)}>{tag}</MenuItem>)}\n            {\n              this.state.adding ?\n              <MenuItem>\n                <TextField\n                  style={{width: '100px'}}\n                  defaultValue=\"\"\n                  margin=\"normal\"\n                  value={this.state.inputText}\n                  onChange={this.handleChange}\n                  onKeyPress={this.handleSubmit}\n                />\n              </MenuItem> : \n              <MenuItem onClick={this.handleAddTag}>add</MenuItem>\n            }\n          </MenuList>\n        </Paper>\n      </RootRef>\n    )\n  }\n  private handleClick = (e: any) => {\n    if (!this.rootRef.current.contains(e.target)) {\n      console.log('close')\n      this.props.close();\n    }\n  }\n  private handleSubmit = (e: any) => {\n    if (e.key.toLowerCase() === \"enter\") {\n      this.props.updateTags([\n        ...this.props.tags,\n        this.state.inputText\n      ])\n      this.setState({\n        adding: false,\n        inputText:''\n      })\n    }\n  }\n\n  private handleChange = (e: any) => {\n    this.setState({\n      inputText: e.target.value\n    })\n  }\n\n  private handleAddTag = () => {\n    this.setState({adding: true})\n  }\n}\n","import React, { SFC, Fragment } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styled from 'styled-components';\nimport { Entity } from '.';\n\nconst Wrapper = styled.div`\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\ninterface PannelProps {\n  entities: Entity[];\n  onStyle: (tag: string) => React.CSSProperties;\n  onDelete: (start: number, end: number) => void;\n}\n\nexport const Pannel: SFC<PannelProps> = ({entities, onStyle, onDelete}) => {\n  return (\n    <Fragment>\n      {entities.map((entity, index) => {\n        return (\n          <Wrapper key={index}>\n            <span style={onStyle(entity.tag)}>{entity.tag}</span>\n            <span>{entity.text}</span>\n            <IconButton style={{padding: '0px'}} aria-label=\"Delete\" onClick={() => onDelete(entity.start, entity.end)}>\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </Wrapper>\n        )\n      })}\n    </Fragment>\n  )\n}","import React, { Fragment } from 'react'\nimport RootRef from '@material-ui/core/RootRef';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { withStyles } from '@material-ui/core/styles';\nimport {selectionIsEmpty, selectionIsBackwards, splitWithOffsets} from './utils'\nimport { stringToRGBA, stringToHex } from './color';\nimport { Menu } from './Menu';\nimport { Pannel } from './Pannel';\nimport styled from 'styled-components';\n\nconst Phrase = styled.div`\n  padding: 0.5rem;\n  line-height: 1.7rem;\n`\n\nconst styles = {\n  root: {\n    borderLeft: '1px solid gray',\n  },\n  tile: {\n    overflow: 'scroll',\n  },\n};\n\nconst StyledGridListTile = withStyles(styles)(GridListTile);\n\nexport interface Entity {\n  start: number\n  end: number\n  text: string\n  tag: string\n}\n\nexport interface AnnotatorProps {\n  phrase: string;\n  tags: string[];\n  updateTags: (tags: string[]) => void;\n  entities: Entity[];\n  updateEntities: (entities: Entity[]) => void;\n}\n\nexport interface AnnotatorStates {\n  open: boolean\n  start: number\n  end: number\n  inputText: string\n  left: number\n  top: number\n}\n\nconst Split = (props: any) => {\n  if (props.mark) return (\n    <mark\n      style={{border: `3px solid ${stringToHex(props.tag)}`,backgroundColor: stringToRGBA(props.tag), padding: '0 4px'}}\n      data-start={props.start}\n      data-end={props.end}\n      onClick={() => props.onClick ? props.onClick({start: props.start, end: props.end}) : null}\n    >\n      {props.text}\n    </mark>\n  )\n  return (\n    <span\n      data-start={props.start}\n      data-end={props.end}\n      onClick={() => props.onClick ? props.onClick({start: props.start, end: props.end}) : null}\n    >\n      {props.content}\n    </span>\n  )\n}\n\nexport default class Annotator extends React.Component<AnnotatorProps, AnnotatorStates> {\n  rootRef: any\n  menuRef: any\n  constructor(props: AnnotatorProps) {\n    super(props)\n\n    this.rootRef = (React as any).createRef()\n    this.menuRef = (React as any).createRef()\n  }\n  public state: AnnotatorStates = {\n    open: false,\n    start: 0,\n    end: 0,\n    inputText: '',\n    left: 0,\n    top: 0\n  }\n  componentDidMount() {\n    this.rootRef.current.addEventListener('mouseup', this.handleMouseUp)\n  }\n  componentWillUnmount() {\n    this.rootRef.current.removeEventListener('mouseup', this.handleMouseUp)\n  }\n  render() {\n    const {phrase, entities, updateTags} = this.props\n    const splits = splitWithOffsets(phrase, entities)\n    return (\n      <Fragment>\n        {this.state.open && \n          <Menu \n            handleMenuItemClick={this.handleMenuItemClick} \n            close={() => this.setState({open: false})}\n            left={this.state.left}\n            top={this.state.top}\n            tags={this.props.tags}\n            updateTags={updateTags}\n          />\n        }\n        <RootRef rootRef={this.menuRef} >\n          <GridList style={{width: '100%'}} cellHeight={130} cols={3}>\n            <GridListTile cols={2}>\n              <Phrase ref={this.rootRef}>\n                {splits.map(split => (\n                  <Split key={`${split.start}-${split.end}`} {...split} />\n                ))}\n              </Phrase>\n            </GridListTile>\n            <StyledGridListTile cols={1}>\n              <Pannel \n                entities={entities}\n                onStyle={(tag) => ({backgroundColor: stringToRGBA(tag), border: `3px solid ${stringToHex(tag)}`})}\n                onDelete={(start: number, end: number) => this.handleDelete(start, end)}\n              />\n            </StyledGridListTile>\n          </GridList>\n        </RootRef>\n      </Fragment>\n    )\n  }\n  handleDelete = (start: number, end: number) => {\n    const splitIndex = this.props.entities.findIndex(s => s.start === start && s.end === end)\n    if (splitIndex >= 0) {\n      this.props.updateEntities([\n        ...this.props.entities.slice(0, splitIndex),\n        ...this.props.entities.slice(splitIndex + 1),\n      ])\n    }\n  }\n  handleMouseUp = () => {\n    const selection = window.getSelection()\n\n    if (selectionIsEmpty(selection)) {\n      this.setState({open: false})\n      return\n    }\n\n    let temp = this.menuRef.current;\n    let offsetTop = 0;\n    let offsetLeft = 0;\n    while (temp.offsetParent) {\n      temp = temp.offsetParent;\n      offsetTop += temp.offsetTop;\n      offsetLeft += temp.offsetLeft;\n    }\n\n    const left = window.getSelection().getRangeAt(0).getBoundingClientRect().left - offsetLeft;\n    const top = window.getSelection().getRangeAt(0).getBoundingClientRect().top +\n      window.getSelection().getRangeAt(0).getBoundingClientRect().height/2 - offsetTop;\n\n    let start =\n      parseInt((selection.anchorNode.parentElement as any).getAttribute('data-start'), 10) +\n      selection.anchorOffset\n    let end =\n      parseInt((selection.focusNode.parentElement as any).getAttribute('data-start'), 10) +\n      selection.focusOffset\n\n    if (selectionIsBackwards(selection)) {\n      ;[start, end] = [end, start]\n    }\n\n    this.setState({\n      open: true,\n      start,\n      end,\n      left,\n      top\n    })\n  }\n\n  handleMenuItemClick = (tag: string) => {\n    const entities = this.props.entities;\n    const index = entities.findIndex(a => a.start > this.state.start);\n    const data = {\n      start: this.state.start, \n      end: this.state.end, \n      text: this.props.phrase.slice(this.state.start, this.state.end),\n      tag,\n    };\n\n    let list = [\n      ...entities,\n      data\n    ];\n\n    if (index >= 0) {\n      list = [\n        ...entities.slice(0, index),\n        data,\n        ...entities.slice(index, entities.length)\n      ];\n    }\n\n\n    this.props.updateEntities(list)\n    this.setState({open: false})\n\n    window.getSelection().empty()\n  }\n}","import React, { SFC } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Annotator, { Entity } from './Annotator';\n\nexport interface RowProps {\n  phrase: string;\n  tags: string[];\n  updateTags: (tags: string[]) => void;\n  entities: Entity[];\n  updateEntities: (entities: Entity[]) => void;\n}\n\nexport const Row: SFC<RowProps> = ({phrase, tags, updateTags, entities, updateEntities}) => {\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary>\n        <Typography>[{entities.length}] {phrase}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Annotator \n          phrase={phrase}\n          tags={tags}\n          updateTags={updateTags}\n          entities={entities}\n          updateEntities={updateEntities}\n        />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Row } from './Row';\nimport { data } from './data';\n\nconst KEY = \"entities\";\n\nclass App extends Component {\n  state = {\n    multiline: \"\",\n    data: [],\n    tags: []\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.onLoadFromInput}>\n          LOAD from input\n        </Button>\n        <Button variant=\"outlined\" onClick={this.save}>\n          Save to localStorage\n        </Button>\n        <Button variant=\"outlined\" onClick={this.load}>\n          Load from localStorage\n        </Button>\n        <div>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Multiline\"\n            multiline\n            rowsMax=\"4\"\n            value={this.state.multiline}\n            onChange={this.handleChange}\n            fullWidth\n            margin=\"normal\"\n          />\n        </div>\n        {\n          this.state.data.map((value, i) => <Row \n            key={i}\n            phrase={value.phrase}\n            tags={this.state.tags}\n            updateTags={(tags) => {\n              this.setState({tags: tags});\n            }}\n            entities={value.entities}\n            updateEntities={(entities) => {\n              this.setState((prevState) => {\n                return {\n                  ...prevState,\n                  data: [\n                    ...prevState.data.slice(0, i),\n                    {\n                      phrase: prevState.data[i].phrase,\n                      entities,\n                    },\n                    ...prevState.data.slice(i + 1, prevState.data.length),\n                  ]\n                };\n              })\n            }}\n          />)\n        }\n        <div>\n          <h4>Current Value</h4>\n          {this.parse(this.state.data)}\n        </div>\n      </div>\n    );\n  }\n  save = () => {\n    localStorage.setItem(KEY, JSON.stringify(this.state.data))\n  }\n  load = () => {\n    const data = JSON.parse(localStorage.getItem(KEY));\n    this.setState({\n      data,\n      tags : this.loadTags(data)\n    })\n  }\n  loadTags = (data) => {\n    return data.map(a => a.entities.map(b => b.tag)).flat().reduce((acc,a) => acc.includes(a) ? acc : [...acc, a], []);\n  }\n  onLoadFromInput = () => {\n    this.setState({\n      data: this.state.multiline.split('\\n').map(phrase => {\n        return {\n          phrase,\n          entities: []\n        }\n      })\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n       multiline: event.target.value,\n    });\n  }\n  parse = (data) => {\n    return data.map((d, i) => <div key={i}>{this.parsePhrase(d)}</div>);\n  }\n  parsePhrase = (data) => {\n    return data.entities.reduceRight((acc, entity) => {\n      return [\n        ...acc.slice(0, entity.start),\n        ...`#${entity.tag}\"${entity.text}\"`,\n        ...acc.slice(entity.end, data.phrase.length)\n      ]\n    }, data.phrase);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
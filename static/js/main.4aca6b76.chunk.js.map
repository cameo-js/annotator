{"version":3,"sources":["Annotator/utils.ts","Annotator/color.ts","Annotator/Menu.tsx","Annotator/Pannel.tsx","Annotator/index.tsx","Row.tsx","App.jsx","index.jsx"],"names":["selectionIsEmpty","selection","anchorNode","compareDocumentPosition","focusNode","focusOffset","anchorOffset","selectionIsBackwards","position","backward","Node","DOCUMENT_POSITION_PRECEDING","hashCode","str","hash","i","length","charCodeAt","stringToHex","concat","num","c","toString","toUpperCase","substring","numberToHex","stringToRGBA","rgb","numberToRGB","Menu","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputText","adding","handleClick","e","rootRef","current","contains","target","console","log","close","handleSubmit","key","toLowerCase","updateTags","toConsumableArray","tags","setState","handleChange","value","handleAddTag","React","createRef","inherits","createClass","_this2","setTimeout","document","addEventListener","removeEventListener","_this$props","handleMenuItemClick","left","top","react_default","a","createElement","index_es","style","display","zIndex","map","tag","index","onClick","event","autoFocus","width","defaultValue","margin","onChange","onKeyPress","color","Component","Wrapper","styled","div","_templateObject","Pannel","_ref","entities","onStyle","onDelete","react","entity","text","IconButton_default","padding","aria-label","start","end","Delete_default","fontSize","Phrase","Annotator_templateObject","StyledGridListTile","withStyles","root","borderLeft","tile","overflow","GridListTile","Split","mark","border","backgroundColor","data-start","data-end","content","Annotator","open","handleDelete","splitIndex","findIndex","s","updateEntities","slice","handleMouseUp","window","getSelection","temp","menuRef","offsetTop","offsetLeft","offsetParent","getRangeAt","getBoundingClientRect","height","parseInt","parentElement","getAttribute","data","phrase","list","empty","splits","offsets","lastEnd","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","sortBy","o","Symbol","iterator","next","done","offset","push","objectSpread","err","return","splitWithOffsets","Menu_Menu","RootRef_default","GridList_default","cellHeight","cols","GridListTile_default","ref","split","Annotator_Split","assign","Pannel_Pannel","Row","ExpansionPanel_default","ExpansionPanelSummary_default","Typography_default","ExpansionPanelDetails_default","Annotator_Annotator","KEY","App","multiline","save","localStorage","setItem","JSON","stringify","load","parse","getItem","loadTags","b","flat","reduce","acc","includes","onLoadFromInput","filter","d","parsePhrase","reduceRight","className","variant","id","label","rowsMax","fullWidth","Row_Row","prevState","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.4aca6b76.chunk.js","sourcesContent":["import sortBy from 'lodash/sortBy';\n\nexport const splitWithOffsets = (text: string, offsets: {start: number; end: number}[]) => {\n  let lastEnd = 0\n  const splits = []\n\n  for (let offset of sortBy(offsets, o => o.start)) {\n    const {start, end} = offset\n    if (lastEnd < start) {\n      splits.push({\n        start: lastEnd,\n        end: start,\n        content: text.slice(lastEnd, start),\n      })\n    }\n    splits.push({\n      ...offset,\n      mark: true,\n      content: text.slice(start, end),\n    })\n    lastEnd = end\n  }\n  if (lastEnd < text.length) {\n    splits.push({\n      start: lastEnd,\n      end: text.length,\n      content: text.slice(lastEnd, text.length),\n    })\n  }\n\n  return splits\n}\n\nexport const selectionIsEmpty = (selection: Selection) => {\n  let position = selection.anchorNode.compareDocumentPosition(selection.focusNode)\n\n  return position === 0 && selection.focusOffset === selection.anchorOffset\n}\n\nexport const selectionIsBackwards = (selection: Selection) => {\n  if (selectionIsEmpty(selection)) return false\n\n  let position = selection.anchorNode.compareDocumentPosition(selection.focusNode)\n\n  let backward = false\n  if (\n    (!position && selection.anchorOffset > selection.focusOffset) ||\n    position === Node.DOCUMENT_POSITION_PRECEDING\n  )\n    backward = true\n\n  return backward\n}\n","const hashCode = (str: string) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n     hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n} \n\nconst numberToHex = (num: number) => {\n  const c = (num & 0x00FFFFFF)\n      .toString(16)\n      .toUpperCase();\n\n  return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nconst numberToRGB = (num: number) => {\n  const c = (num & 0x00FFFFFF)\n\n  return [c >> 16 & 0xFF, c >> 8 & 0xFF, c & 0xFF];\n}\n\nexport const stringToHex = (str: string) => `#${numberToHex((hashCode(str)))}`\n\nexport const stringToRGBA = (str: string) => {\n  const rgb = numberToRGB((hashCode(str)))\n  return `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 0.2)`\n}\n","import React from 'react'\nimport { Paper, MenuList, MenuItem, TextField, RootRef, Icon } from '@material-ui/core';\n\ninterface MenuProps {\n  left: number;\n  top: number;\n  tags: string[];\n  handleMenuItemClick: (tag: string, index: number) => void;\n  close: () => void;\n  updateTags: (tags: string[]) => void;\n}\n\ninterface MenuStates {\n  inputText: any\n  adding: boolean;\n}\n\nexport class Menu extends React.Component<MenuProps, MenuStates> {\n  rootRef: any;\n  constructor(props: MenuProps) {\n    super(props)\n\n    this.rootRef = (React as any).createRef();\n  }\n  public state: MenuStates = {\n    inputText: '',\n    adding: false,\n  }\n  public componentDidMount() {\n    setTimeout(() => {\n      document.addEventListener('click', this.handleClick);\n    }, 500)\n  }\n  public componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n  }\n  public render() {\n    const {handleMenuItemClick, left, top, tags} = this.props\n    return (\n      <RootRef rootRef={this.rootRef} >\n        <Paper\n          style={{\n            left: `${left}px`, \n            top: `${top + 10}px`,\n            display: 'inline-block',\n            position:'absolute',\n            zIndex: 10\n          }}\n        >\n          <MenuList>\n            {tags.map((tag, index) => <MenuItem key={index} onClick={event => handleMenuItemClick(tag, index)}>{tag}</MenuItem>)}\n            {\n              this.state.adding ?\n              <MenuItem>\n                <TextField\n                  autoFocus\n                  style={{width: '100px'}}\n                  defaultValue=\"\"\n                  margin=\"normal\"\n                  value={this.state.inputText}\n                  onChange={this.handleChange}\n                  onKeyPress={this.handleSubmit}\n                />\n              </MenuItem> : \n              <MenuItem onClick={this.handleAddTag}>\n              <Icon color=\"primary\">\n                add_circle\n              </Icon>add</MenuItem>\n            }\n          </MenuList>\n        </Paper>\n      </RootRef>\n    )\n  }\n  private handleClick = (e: any) => {\n    if (!this.rootRef.current.contains(e.target)) {\n      console.log('close')\n      this.props.close();\n    }\n  }\n  private handleSubmit = (e: any) => {\n    if (e.key.toLowerCase() === \"enter\") {\n      this.props.updateTags([\n        ...this.props.tags,\n        this.state.inputText\n      ])\n      this.setState({\n        adding: false,\n        inputText:''\n      })\n    }\n  }\n\n  private handleChange = (e: any) => {\n    this.setState({\n      inputText: e.target.value\n    })\n  }\n\n  private handleAddTag = () => {\n    this.setState({adding: true})\n  }\n}\n","import React, { SFC, Fragment } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styled from 'styled-components';\nimport { Entity } from '.';\n\nconst Wrapper = styled.div`\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\ninterface PannelProps {\n  entities: Entity[];\n  onStyle: (tag: string) => React.CSSProperties;\n  onDelete: (start: number, end: number) => void;\n}\n\nexport const Pannel: SFC<PannelProps> = ({entities, onStyle, onDelete}) => {\n  return (\n    <Fragment>\n      {entities.map((entity, index) => {\n        return (\n          <Wrapper key={index}>\n            <span style={onStyle(entity.tag)}>{entity.tag}</span>\n            <span>{entity.text}</span>\n            <IconButton style={{padding: '0px'}} aria-label=\"Delete\" onClick={() => onDelete(entity.start, entity.end)}>\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </Wrapper>\n        )\n      })}\n    </Fragment>\n  )\n}","import React, { Fragment } from 'react'\nimport RootRef from '@material-ui/core/RootRef';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { withStyles } from '@material-ui/core/styles';\nimport {selectionIsEmpty, selectionIsBackwards, splitWithOffsets} from './utils'\nimport { stringToRGBA, stringToHex } from './color';\nimport { Menu } from './Menu';\nimport { Pannel } from './Pannel';\nimport styled from 'styled-components';\n\nconst Phrase = styled.div`\n  padding: 0.5rem;\n  line-height: 1.7rem;\n`\n\nconst styles = {\n  root: {\n    borderLeft: '1px solid gray',\n  },\n  tile: {\n    overflow: 'scroll',\n  },\n};\n\nconst StyledGridListTile = withStyles(styles)(GridListTile);\n\nexport interface Entity {\n  start: number\n  end: number\n  text: string\n  tag: string\n}\n\nexport interface AnnotatorProps {\n  phrase: string;\n  tags: string[];\n  updateTags: (tags: string[]) => void;\n  entities: Entity[];\n  updateEntities: (entities: Entity[]) => void;\n}\n\nexport interface AnnotatorStates {\n  open: boolean\n  start: number\n  end: number\n  inputText: string\n  left: number\n  top: number\n}\n\nconst Split = (props: any) => {\n  if (props.mark) return (\n    <mark\n      style={{border: `3px solid ${stringToHex(props.tag)}`,backgroundColor: stringToRGBA(props.tag), padding: '0 4px'}}\n      data-start={props.start}\n      data-end={props.end}\n      onClick={() => props.onClick ? props.onClick({start: props.start, end: props.end}) : null}\n    >\n      {props.text}\n    </mark>\n  )\n  return (\n    <span\n      data-start={props.start}\n      data-end={props.end}\n      onClick={() => props.onClick ? props.onClick({start: props.start, end: props.end}) : null}\n    >\n      {props.content}\n    </span>\n  )\n}\n\nexport default class Annotator extends React.Component<AnnotatorProps, AnnotatorStates> {\n  rootRef: any\n  menuRef: any\n  constructor(props: AnnotatorProps) {\n    super(props)\n\n    this.rootRef = (React as any).createRef()\n    this.menuRef = (React as any).createRef()\n  }\n  public state: AnnotatorStates = {\n    open: false,\n    start: 0,\n    end: 0,\n    inputText: '',\n    left: 0,\n    top: 0\n  }\n  componentDidMount() {\n    this.rootRef.current.addEventListener('mouseup', this.handleMouseUp)\n  }\n  componentWillUnmount() {\n    this.rootRef.current.removeEventListener('mouseup', this.handleMouseUp)\n  }\n  render() {\n    const {phrase, entities, updateTags} = this.props\n    const splits = splitWithOffsets(phrase, entities)\n    return (\n      <Fragment>\n        {this.state.open && \n          <Menu \n            handleMenuItemClick={this.handleMenuItemClick} \n            close={() => this.setState({open: false})}\n            left={this.state.left}\n            top={this.state.top}\n            tags={this.props.tags}\n            updateTags={updateTags}\n          />\n        }\n        <RootRef rootRef={this.menuRef} >\n          <GridList style={{width: '100%'}} cellHeight={130} cols={3}>\n            <GridListTile cols={2}>\n              <Phrase ref={this.rootRef}>\n                {splits.map(split => (\n                  <Split key={`${split.start}-${split.end}`} {...split} />\n                ))}\n              </Phrase>\n            </GridListTile>\n            <StyledGridListTile cols={1}>\n              <Pannel \n                entities={entities}\n                onStyle={(tag) => ({backgroundColor: stringToRGBA(tag), border: `3px solid ${stringToHex(tag)}`})}\n                onDelete={(start: number, end: number) => this.handleDelete(start, end)}\n              />\n            </StyledGridListTile>\n          </GridList>\n        </RootRef>\n      </Fragment>\n    )\n  }\n  handleDelete = (start: number, end: number) => {\n    const splitIndex = this.props.entities.findIndex(s => s.start === start && s.end === end)\n    if (splitIndex >= 0) {\n      this.props.updateEntities([\n        ...this.props.entities.slice(0, splitIndex),\n        ...this.props.entities.slice(splitIndex + 1),\n      ])\n    }\n  }\n  handleMouseUp = () => {\n    const selection = window.getSelection()\n\n    if (selectionIsEmpty(selection)) {\n      this.setState({open: false})\n      return\n    }\n\n    let temp = this.menuRef.current;\n    let offsetTop = 0;\n    let offsetLeft = 0;\n    while (temp.offsetParent) {\n      temp = temp.offsetParent;\n      offsetTop += temp.offsetTop;\n      offsetLeft += temp.offsetLeft;\n    }\n\n    const left = window.getSelection().getRangeAt(0).getBoundingClientRect().left - offsetLeft;\n    const top = window.getSelection().getRangeAt(0).getBoundingClientRect().top +\n      window.getSelection().getRangeAt(0).getBoundingClientRect().height/2 - offsetTop;\n\n    let start =\n      parseInt((selection.anchorNode.parentElement as any).getAttribute('data-start'), 10) +\n      selection.anchorOffset\n    let end =\n      parseInt((selection.focusNode.parentElement as any).getAttribute('data-start'), 10) +\n      selection.focusOffset\n\n    if (selectionIsBackwards(selection)) {\n      ;[start, end] = [end, start]\n    }\n\n    this.setState({\n      open: true,\n      start,\n      end,\n      left,\n      top\n    })\n  }\n\n  handleMenuItemClick = (tag: string) => {\n    const entities = this.props.entities;\n    const index = entities.findIndex(a => a.start > this.state.start);\n    const data = {\n      start: this.state.start, \n      end: this.state.end, \n      text: this.props.phrase.slice(this.state.start, this.state.end),\n      tag,\n    };\n\n    let list = [\n      ...entities,\n      data\n    ];\n\n    if (index >= 0) {\n      list = [\n        ...entities.slice(0, index),\n        data,\n        ...entities.slice(index, entities.length)\n      ];\n    }\n\n\n    this.props.updateEntities(list)\n    this.setState({open: false})\n\n    window.getSelection().empty()\n  }\n}","import React, { SFC } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Annotator, { Entity } from './Annotator';\n\nexport interface RowProps {\n  phrase: string;\n  tags: string[];\n  updateTags: (tags: string[]) => void;\n  entities: Entity[];\n  updateEntities: (entities: Entity[]) => void;\n}\n\nexport const Row: SFC<RowProps> = ({phrase, tags, updateTags, entities, updateEntities}) => {\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary>\n        <Typography>[{entities.length}] {phrase}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Annotator \n          phrase={phrase}\n          tags={tags}\n          updateTags={updateTags}\n          entities={entities}\n          updateEntities={updateEntities}\n        />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { Row } from './Row';\n\nconst KEY = \"entities\";\n\nclass App extends Component {\n  state = {\n    multiline: \"\",\n    data: [],\n    tags: []\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.onLoadFromInput}>\n          LOAD from input\n        </Button>\n        <Button variant=\"outlined\" onClick={this.save}>\n          Save to localStorage\n        </Button>\n        <Button variant=\"outlined\" onClick={this.load}>\n          Load from localStorage\n        </Button>\n        <div>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Multiline\"\n            multiline\n            rowsMax=\"4\"\n            value={this.state.multiline}\n            onChange={this.handleChange}\n            fullWidth\n            margin=\"normal\"\n          />\n        </div>\n        {\n          this.state.data.map((value, i) => <Row \n            key={i}\n            phrase={value.phrase}\n            tags={this.state.tags}\n            updateTags={(tags) => {\n              this.setState({tags: tags});\n            }}\n            entities={value.entities}\n            updateEntities={(entities) => {\n              this.setState((prevState) => {\n                return {\n                  ...prevState,\n                  data: [\n                    ...prevState.data.slice(0, i),\n                    {\n                      phrase: prevState.data[i].phrase,\n                      entities,\n                    },\n                    ...prevState.data.slice(i + 1, prevState.data.length),\n                  ]\n                };\n              })\n            }}\n          />)\n        }\n        <div>\n          <h4>Current Value</h4>\n          {this.parse(this.state.data)}\n        </div>\n      </div>\n    );\n  }\n  save = () => {\n    localStorage.setItem(KEY, JSON.stringify(this.state.data))\n  }\n  load = () => {\n    const data = JSON.parse(localStorage.getItem(KEY));\n    this.setState({\n      data,\n      tags : this.loadTags(data)\n    })\n  }\n  loadTags = (data) => {\n    return data.map(a => a.entities.map(b => b.tag)).flat().reduce((acc,a) => acc.includes(a) ? acc : [...acc, a], []);\n  }\n  onLoadFromInput = () => {\n    this.setState({\n      data: this.state.multiline.split('\\n').filter(s => s !== \"\").map(phrase => {\n        return {\n          phrase,\n          entities: []\n        }\n      })\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n       multiline: event.target.value,\n    });\n  }\n  parse = (data) => {\n    return data.map((d, i) => <div key={i}>{this.parsePhrase(d)}</div>);\n  }\n  parsePhrase = (data) => {\n    return data.entities.reduceRight((acc, entity) => {\n      return acc.slice(0, entity.start).concat(`#${entity.tag}\"${entity.text}\"`).concat(acc.slice(entity.end, acc.length))\n    }, data.phrase);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}